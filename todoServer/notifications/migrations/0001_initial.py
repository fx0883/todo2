# Generated by Django 5.0 on 2024-12-08 13:29

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='模板名称')),
                ('type', models.CharField(choices=[('email', '邮件'), ('push', '推送'), ('sms', '短信')], max_length=20, verbose_name='类型')),
                ('title_template', models.CharField(max_length=200, verbose_name='标题模板')),
                ('content_template', models.TextField(verbose_name='内容模板')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '通知模板',
                'verbose_name_plural': '通知模板',
            },
        ),
        migrations.CreateModel(
            name='HistoricalNotificationDevice',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('push_token', models.CharField(blank=True, max_length=255, null=True, verbose_name='推送令牌')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('last_active', models.DateTimeField(blank=True, null=True, verbose_name='最后活跃时间')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('device', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.userdevice')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical 通知设备',
                'verbose_name_plural': 'historical 通知设备',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalNotificationTemplate',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='模板名称')),
                ('type', models.CharField(choices=[('email', '邮件'), ('push', '推送'), ('sms', '短信')], max_length=20, verbose_name='类型')),
                ('title_template', models.CharField(max_length=200, verbose_name='标题模板')),
                ('content_template', models.TextField(verbose_name='内容模板')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical 通知模板',
                'verbose_name_plural': 'historical 通知模板',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('status', models.CharField(choices=[('pending', '待发送'), ('sent', '已发送'), ('failed', '发送失败'), ('read', '已读')], default='pending', max_length=20, verbose_name='状态')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='错误信息')),
                ('scheduled_time', models.DateTimeField(blank=True, null=True, verbose_name='计划发送时间')),
                ('sent_time', models.DateTimeField(blank=True, null=True, verbose_name='发送时间')),
                ('read_time', models.DateTimeField(blank=True, null=True, verbose_name='阅读时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='notifications', to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': '通知',
                'verbose_name_plural': '通知',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalNotification',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('content', models.TextField(verbose_name='内容')),
                ('status', models.CharField(choices=[('pending', '待发送'), ('sent', '已发送'), ('failed', '发送失败'), ('read', '已读')], default='pending', max_length=20, verbose_name='状态')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='错误信息')),
                ('scheduled_time', models.DateTimeField(blank=True, null=True, verbose_name='计划发送时间')),
                ('sent_time', models.DateTimeField(blank=True, null=True, verbose_name='发送时间')),
                ('read_time', models.DateTimeField(blank=True, null=True, verbose_name='阅读时间')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('template', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'historical 通知',
                'verbose_name_plural': 'historical 通知',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='NotificationDevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('push_token', models.CharField(blank=True, max_length=255, null=True, verbose_name='推送令牌')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='是否启用')),
                ('last_active', models.DateTimeField(blank=True, null=True, verbose_name='最后活跃时间')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='accounts.userdevice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_devices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '通知设备',
                'verbose_name_plural': '通知设备',
                'unique_together': {('user', 'device')},
            },
        ),
    ]
