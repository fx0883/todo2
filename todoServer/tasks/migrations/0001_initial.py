# Generated by Django 5.0 on 2024-12-08 13:29

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='分类名称')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='颜色')),
                ('icon', models.CharField(blank=True, max_length=50, null=True, verbose_name='图标')),
                ('order', models.IntegerField(default=0, verbose_name='排序')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '分类',
                'verbose_name_plural': '分类',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalCategory',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='分类名称')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='颜色')),
                ('icon', models.CharField(blank=True, max_length=50, null=True, verbose_name='图标')),
                ('order', models.IntegerField(default=0, verbose_name='排序')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical 分类',
                'verbose_name_plural': 'historical 分类',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTag',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='标签名称')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='颜色')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical 标签',
                'verbose_name_plural': 'historical 标签',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTask',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('priority', models.IntegerField(choices=[(1, '低'), (2, '中'), (3, '高')], default=2, verbose_name='优先级')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('in_progress', '进行中'), ('completed', '已完成'), ('archived', '已归档')], default='pending', max_length=20, verbose_name='状态')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='截止时间')),
                ('reminder_time', models.DateTimeField(blank=True, null=True, verbose_name='提醒时间')),
                ('repeat_type', models.CharField(choices=[('none', '不重复'), ('daily', '每天'), ('weekly', '每周'), ('monthly', '每月'), ('yearly', '每年'), ('custom', '自定义')], default='none', max_length=20, verbose_name='重复类型')),
                ('repeat_config', models.JSONField(blank=True, null=True, verbose_name='重复配置')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('is_important', models.BooleanField(default=False, verbose_name='是否重要')),
                ('order', models.IntegerField(default=0, verbose_name='排序')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tasks.category')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical 任务',
                'verbose_name_plural': 'historical 任务',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='标签名称')),
                ('color', models.CharField(default='#000000', max_length=7, verbose_name='颜色')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '标签',
                'verbose_name_plural': '标签',
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('priority', models.IntegerField(choices=[(1, '低'), (2, '中'), (3, '高')], default=2, verbose_name='优先级')),
                ('status', models.CharField(choices=[('pending', '待处理'), ('in_progress', '进行中'), ('completed', '已完成'), ('archived', '已归档')], default='pending', max_length=20, verbose_name='状态')),
                ('due_date', models.DateTimeField(blank=True, null=True, verbose_name='截止时间')),
                ('reminder_time', models.DateTimeField(blank=True, null=True, verbose_name='提醒时间')),
                ('repeat_type', models.CharField(choices=[('none', '不重复'), ('daily', '每天'), ('weekly', '每周'), ('monthly', '每月'), ('yearly', '每年'), ('custom', '自定义')], default='none', max_length=20, verbose_name='重复类型')),
                ('repeat_config', models.JSONField(blank=True, null=True, verbose_name='重复配置')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('is_important', models.BooleanField(default=False, verbose_name='是否重要')),
                ('order', models.IntegerField(default=0, verbose_name='排序')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to='tasks.category')),
                ('tags', models.ManyToManyField(blank=True, related_name='tasks', to='tasks.tag')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '任务',
                'verbose_name_plural': '任务',
                'ordering': ['-is_important', 'order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalTaskSync',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('last_sync_time', models.DateTimeField(verbose_name='最后同步时间')),
                ('sync_status', models.CharField(max_length=20, verbose_name='同步状态')),
                ('sync_error', models.TextField(blank=True, null=True, verbose_name='同步错误')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('device', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='accounts.userdevice')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tasks.task')),
            ],
            options={
                'verbose_name': 'historical 任务同步',
                'verbose_name_plural': 'historical 任务同步',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalTaskComment',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('content', models.TextField(verbose_name='内容')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('task', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tasks.task')),
            ],
            options={
                'verbose_name': 'historical 任务评论',
                'verbose_name_plural': 'historical 任务评论',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='TaskComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='内容')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='tasks.task')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '任务评论',
                'verbose_name_plural': '任务评论',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TaskSync',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_sync_time', models.DateTimeField(verbose_name='最后同步时间')),
                ('sync_status', models.CharField(max_length=20, verbose_name='同步状态')),
                ('sync_error', models.TextField(blank=True, null=True, verbose_name='同步错误')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='synced_tasks', to='accounts.userdevice')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sync_status', to='tasks.task')),
            ],
            options={
                'verbose_name': '任务同步',
                'verbose_name_plural': '任务同步',
                'unique_together': {('task', 'device')},
            },
        ),
    ]
