# Generated by Django 5.0 on 2024-12-28 09:33

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tasks', '0003_alter_historicaltask_status_alter_task_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.RemoveField(
            model_name='historicaltask',
            name='repeat_config',
        ),
        migrations.RemoveField(
            model_name='historicaltask',
            name='repeat_type',
        ),
        migrations.RemoveField(
            model_name='task',
            name='repeat_config',
        ),
        migrations.RemoveField(
            model_name='task',
            name='repeat_type',
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='instance_number',
            field=models.IntegerField(blank=True, null=True, verbose_name='重复序号'),
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='scheduled_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='计划日期'),
        ),
        migrations.AddField(
            model_name='task',
            name='instance_number',
            field=models.IntegerField(blank=True, null=True, verbose_name='重复序号'),
        ),
        migrations.AddField(
            model_name='task',
            name='scheduled_date',
            field=models.DateTimeField(blank=True, null=True, verbose_name='计划日期'),
        ),
        migrations.CreateModel(
            name='HistoricalRepeatTask',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('repeat_type', models.CharField(choices=[('none', '不重复'), ('daily', '每天'), ('weekly', '每周'), ('monthly', '每月'), ('yearly', '每年'), ('continuous', '一直重复'), ('workdays', '工作日'), ('weekends', '周末'), ('holidays', '节假日'), ('custom', '自定义')], max_length=20, verbose_name='重复类型')),
                ('repeat_config', models.JSONField(verbose_name='重复配置')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(blank=True, editable=False, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(blank=True, editable=False, verbose_name='更新时间')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('category', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tasks.category')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical 重复任务',
                'verbose_name_plural': 'historical 重复任务',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='RepeatTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='标题')),
                ('description', models.TextField(blank=True, null=True, verbose_name='描述')),
                ('repeat_type', models.CharField(choices=[('none', '不重复'), ('daily', '每天'), ('weekly', '每周'), ('monthly', '每月'), ('yearly', '每年'), ('continuous', '一直重复'), ('workdays', '工作日'), ('weekends', '周末'), ('holidays', '节假日'), ('custom', '自定义')], max_length=20, verbose_name='重复类型')),
                ('repeat_config', models.JSONField(verbose_name='重复配置')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否激活')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='repeat_tasks', to='tasks.category')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repeat_tasks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '重复任务',
                'verbose_name_plural': '重复任务',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='historicaltask',
            name='repeat_task',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tasks.repeattask'),
        ),
        migrations.AddField(
            model_name='task',
            name='repeat_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='instances', to='tasks.repeattask'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['repeat_task', 'scheduled_date'], name='tasks_task_repeat__dffca8_idx'),
        ),
        migrations.AddIndex(
            model_name='task',
            index=models.Index(fields=['user', 'scheduled_date'], name='tasks_task_user_id_6a1762_idx'),
        ),
    ]
